#!bin/bash

#find all file if they have string
find ./ -type f -exec grep -H 'solver' {} \;

#find to many nested folders and files

find . -mindepth 2 | awk -F/'{print $2"/"}' | sort | uniq -c | sort -n | tail -10
# or 
du -sh * | sort -rh | head -5

# number of adress and they number of requests
cat access.log.1 | awk '{print $1}' | sort |uniq -c | sort -n | tail

#number of adress and they number of requests 404 code

cat access.log.1 | awk '{print $1, $8}' | sort |uniq -c | sort -n | tail | grep 404

#number of adress and they date and time 

cat access.log.1 | awk '{print $3}' | sort |uniq -c | sort -n | tail

# find files have data
grep -lir 'ssl' /etc/nginx/

# find files crt
find / -iname '*.crt'


# information about system 
cat /etc/*-release 



# find something in logs 
ls -lt / | awk '{print $1}'| sort -u | grep -v итого


# use binaries for commands

### Binaries ###
TAR="$(which tar)"
GZIP="$(which gzip)"
FTP="$(which ftp)"
MYSQL="$(which mysql)"
MYSQLDUMP="$(which mysqldump)"
#and example for use 

$MYSQLDUMP --add-drop-table -u $MUSER -h $MHOST -p$MPASS $db | $GZIP > $FILE;


#speed write 
sync; dd if=/dev/zero of=tempfile bs=1M count=1024; sync
#speed read buffer
dd if=tempfile of=/dev/null bs=1M count=1024
#speed read without buffer
sudo /sbin/sysctl -w vm.drop_caches=3
dd if=tempfile of=/dev/null bs=1M count=1024



#!/bin/bash

BACKUP_DIR="/tmp/backups"
BACKUP_FILE="$(date +%F-%H-%M-%S).tar.gz"

if [ ! -d $BACKUP_DIR ]; then
    mkdir -p "$BACKUP_DIR"
fi


tar -czf "$BACKUP_DIR/$BACKUP_FILE" /etc 2>/dev/null





#!/bin/bash

for pf in ./task2/{2010..2020}/{01..12}/{001..005}; do
  mkdir -p "$(dirname $pf)" && echo "Файл $(echo $pf | cut -d '/' -f 5)" > "$pf$
done




#find something big 
ps -e -o pid,user,%mem,command --sort %mem

